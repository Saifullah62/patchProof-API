# PatchProof Environment Example
# Copy to .env and fill values for your environment

# Server
# PORT the HTTP server listens on (non-secret)
PORT=3001
# NODE_ENV should be set by your process manager (non-secret)
NODE_ENV=production

# Database (REQUIRED)
# Use authenticated URIs in staging/production. Example:
#   mongodb://patchproof_user:STRONG_PASSWORD@mongo-host:27017/patchproof?authSource=admin
MONGODB_URI=
DB_NAME=patchproof

# Auth (REQUIRED)
# Generate random 32-byte hex values for secrets:
#   openssl rand -hex 32
# API key for admin endpoints (send as x-api-key header)
API_KEY=
# JWT signing secret
JWT_SECRET=
# Master secret (used for envelope encryption / derivations if enabled)
MASTER_SECRET=

# Redis (REQUIRED for rate limits, BullMQ, SVD caches)
# In staging/production you MUST enable authentication. Either embed credentials in REDIS_URL
#   e.g., redis://default:STRONG_PASSWORD@redis-host:6379
# or supply REDIS_PASSWORD alongside host/port.
REDIS_URL=
REDIS_PASSWORD=

# Issuer key derivation (choose one; optional)
# Extended private key for HD derivation (preferred)
ISSUER_XPRV=
# OR deterministic seed fallback
ISSUER_SEED=

# BSV Network configuration (non-secret)
# Use 'main' or 'test'
WOC_NETWORK=test
## WhatsOnChain client tuning (non-secret)
# Request timeout in ms (default 15000)
# WOC_TIMEOUT_MS=15000
# Number of retry attempts on transient failures (default 2)
# WOC_RETRIES=2

# UTXO/change management (REQUIRED where noted)
# No WIFs anywhere; signing is handled by external KMS.
UTXO_FUNDING_KEY_IDENTIFIER=   # (REQUIRED) stable key id used by KMS signer
UTXO_FUNDING_ADDRESS=          # (REQUIRED) funding address controlled by the signer
UTXO_CHANGE_ADDRESS=           # (REQUIRED) change/consolidation address
KMS_SIGN_URL=                  # (REQUIRED) HTTPS endpoint of external KMS
# KMS_API_KEY: generate with: openssl rand -hex 32
KMS_API_KEY=                   # (REQUIRED) API key for KMS
ISSUER_KEY_IDENTIFIER=         # (REQUIRED) issuer key identifier used for patch signing
SVD_KMS_KID=svd-kms            # (optional) active SVD KID label
SVD_USE_KMS=1                  # (recommended) force KMS for SVD even in dev

# UTXO splitter configuration
# Minimum confirmed UTXOs to maintain
MIN_UTXO_COUNT=10
# Fixed split size or min/max band (if both min/max set, jitter is applied)
UTXO_SPLIT_SIZE_SATS=5000
UTXO_SPLIT_SIZE_SATS_MIN=5000
UTXO_SPLIT_SIZE_SATS_MAX=5000
# Upper bound of outputs per split tx
MAX_SPLIT_OUTPUTS=40
# Fee settings (non-secret)
FEE_SAT_PER_BYTE=1
UTXO_FEE_BUFFER=2000
DUST_THRESHOLD_SATS=2000
DUST_SWEEP_LIMIT=20
# Confirmation and pacing
UTXO_MIN_CONFIRMATIONS=0
SPLIT_COOLDOWN_MS=60000
# Dry-run to print plan without broadcasting (1 to enable)
SPLIT_DRY_RUN=0

# Email (if used by your deployment)
SMTP_HOST=
SMTP_PORT=
SMTP_USER=
# SMTP_PASS: generate with: openssl rand -base64 24 (or use provider-specific app password)
SMTP_PASS=
EMAIL_FROM=

# Testing toggles (do not set in production)
TEST_FORCE_SIGN_FAIL=

# Internal minimal signer (do NOT expose publicly; local/private network only)
# Enable to mount /internal/signer route in-process. Requires SIGNER_PRIV_WIF to be present on host.
INTERNAL_SIGNER_ENABLED=
# SIGNER_PRIV_WIF is highly sensitive. Keep ONLY on signer host, never in repo/CI.
SIGNER_PRIV_WIF=

# KMS endpoints (split for TX signing vs SVD operations). If unset, falls back to KMS_SIGN_URL.
# TX signing endpoint (e.g., http://127.0.0.1:3001/internal/signer for internal signer; append /sign in client)
KMS_TX_SIGN_URL=
# SVD endpoint (e.g., https://kms.example.com for real KMS; client calls /svd/derive-secret)
KMS_SVD_URL=

# Queue monitoring dashboard (Bull Board)
# Bind to localhost by default; front with reverse-proxy + auth in production
# QUEUES_DASHBOARD_HOST=127.0.0.1
# QUEUES_DASHBOARD_PORT=5050
# Optional separate admin key to protect dashboard; falls back to API_KEY if unset
# ADMIN_API_KEY=
# Comma-separated queue names used by BullMQ
# BULL_QUEUES=broadcast,email
